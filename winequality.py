# -*- coding: utf-8 -*-
"""WineQuality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zH3VhAFPiBZExQIu0Jxk4L9ZfRYZ0Lo-
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

#loading dataframe to a pandas data frame
class wine_prediction:
  def predict():
    wine_dataset = pd.read_csv("C:/Projects/Machine Learning Projects/Wine Quality/winequalityData.csv")

    corelation = wine_dataset.corr()
    plot = plt.figure(figsize=(10,10))
    sns.heatmap(corelation,cbar=True,square=True,cmap='coolwarm',annot=True,annot_kws={'size':8},fmt='.1f')

    #Data Preprocessing
    #seperating the quality and other columns 
    X = wine_dataset.drop('quality',axis=1)

    X.head()

    #binaryizing the values of quality data set
    Y = wine_dataset['quality'].apply(lambda value:1 if value>=7 else 0)
    Y.head()

    #Training and Testing data
    X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=3)

    #Model training
    #RandomForestClassifierModel
    model = RandomForestClassifier()

    #training the model
    model.fit(X_train,Y_train)

    #model evaluation
    X_test_prediction = model.predict(X_test)
    test_data_score = accuracy_score(X_test_prediction,Y_test)

    print("Test Data Accuracy ",test_data_score)

    #predicting system
    input_data = (7.3,0.65,0.0,1.2,0.065,15.0,21.0,0.9946,3.39,0.47,10.0)
    #changing into numpy array
    input_data_numpy_array = np.asarray(input_data)
    #input reshape
    reshaped_data = input_data_numpy_array.reshape(1,-1)

    prediction = model.predict(reshaped_data)
    if(prediction[0]==1):
      print("Good Quality Wine")
    else:
      print("Bad Quality")



